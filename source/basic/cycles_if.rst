Циклы. Логический тип. Условия
==============================

Циклы
-----

Циклы позволяют выполнить нужные действия заданное количество раз.
Общее устройство::

   for НОВАЯ_ПЕРЕМЕННАЯ in МАССИВ:
      тело_цикла

Циклы всегда используются с каким-либо списком или словарем. Цикл перебирает по
очереди все значения списка. Каждый шаг - итерация  - берет соответствующий
элемент из списка и записывает его в переменную `НОВАЯ_ПЕРЕМЕННАЯ` и выполняет
все инструкции в `тело_цикла`. Тело цикла в данном случаем стоит воспринимать
как маленькую программу, которая выполняется каждую итерации и может
использовать все переменные объявленные ранее + переменную цикла
`НОВАЯ_ПЕРЕМЕННАЯ`.

Пример::

   values = [1, 2, 3, 4, 5]
   for item in values:
      print(item)


.. note::
   В дальнейших примерах кода будет встречаться конструкция `print(ПЕРЕМЕННАЯ)`.
   эта конструкция не что иное как вывод на печать переменной в круглых скобках.
   С технической точки зрения, print - это функция, которая выполняет вывод
   переменной на экран.

выведет на экран последовательно строки::

   1
   2
   3
   4
   5

Логический тип
--------------

Логический тип - это значение либо "Да" либо "Нет". В языках чаще используют
`True` и `False` соответственно. Еще говорят "Истина" и "Ложь".

Данные такого формата появляются при определенных операциях. Это операторы
сравнения::

   1 == 1  # равно
   3 < 2  # больше
   4 <= 4  # меньше или равгно
   not 2 > 3  # Не больше

Данные операции работают так и со строками. Есть и другие операторы, например
есть оператор `in` который проверяет что элемент слева находится в массиве
справа::

   1 in [1, 2]

Результатом будет `True`.

::

   1 in [2]

Результатом будет `False`.

Этот оператор так же работает и со строками (которые в принципе ведут себя как
массивы)::

   "Ошибка" in "Ошибка сервера"

Однако нужно учитывать регистр символов(заглавная или прописная).

Условный оператор
-----------------

::
   if 1 in [1, 2]:
      print("yeap")

Выполнит все, что находится внутри, если выражение после `if` и до `:`
вычисляется в `True`.

::
   if True:
      print("always run")

Всегда печатает "always run".

Теперь мы можем выбрать из массива только числа, больше 5::

   a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

   for value in a:
      if value > 5:
         print(value)

Выведет::

   6
   7
   8
   9
   10


Домашнее задание
----------------

Дан массив записей::

   records = [
      {
         "id": 1,
         "info": {
            "text": "Ошибка входных данных",
            "code": 400,
         }
      },
      {
         "id": 3,
         "info": {
            "text": "Сущность создана",
            "code": 201,
         }
      },
      {
         "id": 3,
         "info": {
            "text": "Ошибка страницы",
            "code": 404,
         }
      },
      {
         "id": 4,
         "info": {
            "text": "Ошибка сервера",
            "code": 500,
         }
      },
   ]

Определить какие коды соответствуют ошибкам. Вывести на экран все такие коды.
В данной задаче, должны быть выведены::

   400
   404
   500

Следующий урок: :doc:`./json`
