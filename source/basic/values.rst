Переменные, выражения и выполнение программы
============================================

Под значением понимается данные или проще говоря информация. Эту информацию
можно использовать для вычисления другой информации или выполнения каких-либо
операций.
Переменные - это ячейки или именованные значения. Формально же - это именовая
область памяти в которой хранится значение.
Переменные очень часто используются, т.к. в процессе работы нужно очень много
"помнить". Аналогом человеческой памяти является как раз таки память
компьютера, к которой мы получаем доступ посредством переменных.

.. note::
   Имя переменной задается программистом. Имя должно быть одним словом и
   состоять только из опеделенных символов.

Действия над переменными
------------------------
Наличие переменных было бы бесполезно, если бы мы не могли их использовать.
Вспоминая аналогию с памятью, мы можем делать с ней аналогичные действия:

- создавать (записывать или запоминать или правильно выражаясь - объявлять)
- использовать (считывать или вспоминать)
- удалять (забывать)

Для каждого действия используется своя команда, с точки зрения языка
программирования.

Для создания используется запись вида::

   имя_переменной = значение

Пример создания переменной::

   x = 12

В этом примере мы переменную с именем `x` и "присваиваем" ей значение `12`.

Далее, мы можем обратиться к этой переменной просто указав ее имя::

   x = 12
   x

Выполнение программы
--------------------
Написанные выше строки - это просто строки, пока мы не дадим их выполнить
компьютеру. Только после этого они станут программой. Компьютер (ПК) выполняет
переданные ему команды оду за одной в обычном порядке сверху вниз, слева
направо. Это значит, что мы использовать только ранее созданные переменные.
Например попробуем записать в `x` умноженную на 2 несуществующую переменную `y`

::

   x = y * 2

Когда мы дадим на выполнение эту строку, ПК как правило, сообщит об ошибке, в
которой будет ясно сказано, что переменная `y` не объявлена(т.е. не создана).
А вот другой пример, где эта же строка сработает без ошибок

::
   y = 4
   x = y * 2

Тут мы сначала определили `y` как переменную, на значение `4`, а потом уже
использовали ее. Это одна из самых частых ошибок - использование необъявленных
переменных.

Выражения, арифметические операции
----------------------------------

Создание и получение значения переменной это уже что-то, но нам нужны
конкретные операции, в зависимости от задачи. К примеру, если мы хотим найти
квадрат какого-то большо числа, то можно воспользоваться калькулятором.

Пример::
   x = 1274582
   y = x * x

в этих двух строчках мы посчитали квадрат числа `1274582`, и записали новое
число в переменную `y`. Здесь мы пришли к выражению `y = x * x`.

Почему же все-таки переменные
-----------------------------

Переменные в своем названии содержат их принцип работы: их можно изменить.
Пример::

   x = 2
   x = 4

После выполнения этой программы, в переменная `x` будет указывать на значение
`4` где-то в памяти компьютера.

Или вот еще пример::

   x = 2
   x = x + 7

Значение в `x` - `9`. Потому что мы сначала определили переменную со значением
`2`, а позже взяли его, сложили с `7` и записали это значение снова в
переменную `x`.
