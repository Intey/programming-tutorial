Данные для работ
================

.. contents:: :local:

Мы будем работать с набором данных, который представяет собой базу данных
рецептов:

::

   {
      "description": "Книга рецептов",
      "recipes": [{
         "name": "Оливье",
         "type": "Салаты",
         "ccal": 377,
         "ingridients": [
            {
               "name": "Докторская колбаса",
               "count": { "metric": "гр.", "value": 50 },
            },
            {
               "name": "картофель",
               "count": { "metric": "шт", "value": 1.5 }
            },
            {
               "name": "Морковь",
               "count": { "metric": "шт", "value": 1 }
            },
            {
               "name": "Маринованные огурцы",
               "count": { "metric": "шт", "value": 1 }
            },
            {
               "name": "Яйца куриные",
               "count": { "metric": "шт", "value": 1 }
            },
            {
               "name": "Сметана",
               "count": { "metric": "ч.л.", "value": 1.5 }
            },
            {
               "name": "Майонез",
               "count": { "metric": "гр.", "value": 50 }
            },
            {
               "name": "Соль",
               "count": { "value": "по вкусу" }
            },
         ]
      },
      {
         "name": "Ветвление исполнения",
         "ccal": 242,
         "ingridients": [
            {
               "name": "Яйца куриные",
               "count": { "metric": "шт.", "value": 2 },
            },
            {
               "name": "Соль",
               "count": { "metric": "ч.л.", "value": 1 },
            },
            {
               "name": "Сахар",
               "count": { "metric": "ст.л.", "value": 3 },
            },
            {
               "name": "Молоко",
               "count": { "metric": "стакан", "value": 2 },
            },
            {
               "name": "Пшеничная мука",
               "count": { "metric": "стакан", "value": 2 },
            },
            {
               "name": "Гашеная сода",
               "count": { "metric": "ч.л.", "value": 1 },
            },
            {
               "name": "Растительное масло",
               "count": { "metric": "стакан", "value": 0.25 },
            },
         ]
      }]
   }

Так же, в некоторых задачах нам будет доступен "холодильник":

::

   {
      "description": "Холодильник",
      "content": [
            {
               "name": "Докторская колбаса",
               "count": { "metric": "гр.", "value": 350 },
            },
            {
               "name": "картофель",
               "count": { "metric": "кг", "value": 10 }
            },
            {
               "name": "Морковь",
               "count": { "metric": "кг", "value": 5 }
            },
            {
               "name": "Маринованные огурцы",
               "count": { "metric": "3-х литровая банка", "value": 2 }
            },
            {
               "name": "Яйца куриные",
               "count": { "metric": "шт", "value": 10 }
            },
            {
               "name": "Сметана",
               "count": { "metric": "гр.", "value": 300 }
            },
            {
               "name": "Майонез",
               "count": { "metric": "гр.", "value": 500 }
            },
            {
               "name": "Соль",
               "count": { "metric": "гр.", "value": 1000 }
            },
      ]
   }

Работа с рецептами
------------------

Решение данной задачи :doc:`./sausage.rst`

Поиск рецепта
^^^^^^^^^^^^^

* Отобрать названия рецептов, которые содержать `"Докторская колбаса"`.
* Оформить решение в виде функции, которое принимает какой-то рецепт, и
  возвращает `True` - если в ингридиентах есть колбаса, иначе - `False`
* написать функцию, которая будет принимать список рецептов и функцию отбора
  нужных(аналогичные, написанной ранее про колбасу) и выбирать только нужные.
  Это аналог функции `filter`

Выбор всех метрик
^^^^^^^^^^^^^^^^^

* Собрать массив метрик ингридиентов, используемых в базе.
* написать функцию, которая исключает повторы из массива
* оформить решение в виде функции

FridgeAPI - работа с холодильником
----------------------------------

Нам дан словарь, которые описывает содержимое холодильника. Надо написать
функции, которые позволят добавлять, удалять и изменять его содержимое. Это
пригодится нам для калькулятора возможности приготовления рецепта.

* написать функциию добавления продукта. При добавлении в холодильнике
  соответствующий продукт должен увеличиться на заданную величину. Если
  продукта не было в холодильнике - добавить.
* написать фукнкцию удаления продукта из холодильника. Указывается название и
  количество. Если пытаемся удалить больше чем нужно - возвращаем False

